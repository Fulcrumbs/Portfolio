{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\React\\\\my-react-app\\\\Client\\\\src\\\\Pages\\\\Projects\\\\YGOReplays&Images\\\\ReplayImages.js\",\n  _s = $RefreshSig$();\nimport './ReplayImages.css';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\n/*\r\nJust want this to be able to display my replays and screenshots in an appealing way for practice. \r\nSimple layout practice for different media.\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReplayImages() {\n  _s();\n  const videoUrls = ['/Videos/ShaddollDespia_VS_Lyrilcus.mp4', '/Videos/Altergeist_VS_Dragonmaid.mp4'];\n  const imageUrls = ['/Images/Decklist_Altergeist.png', '/Images/Decklist_Branded_Bystial.png', '/Images/Decklist_Dogmatika.png', '/Images/Decklist_Floowandereeze.png', '/Images/Decklist_Ghostrick.png', '/Images/Decklist_Labryth.png', '/Images/Decklist_LiveTwin.png', '/Images/Decklist_Mathmech.png', '/Images/Decklist_Mikanko.png', '/Images/Decklist_NaturiaRunick.png', '/Images/Decklist_Prankids.png', '/Images/Decklist_Prediction_Princess.png', '/Images/Decklist_PUNKash.png', '/Images/Decklist_PUNKBystial.png', '/Images/Decklist_Rikka.png', '/Images/Decklist_ShaddollPerformage.png', '/Images/Decklist_Solfachord.png', '/Images/Decklist_SprightLiveTwin.png', '/Images/Decklist_SprightMelffy.png', '/Images/Decklist_Sunavalon.png', '/Images/Decklist_SushipMagikey.png', '/Images/Decklist_Sylvan.png', '/Images/Decklist_WeatherPainters.png', '/Images/Festival_Synchro.png', '/Images/Festival_FusionXyz.png'];\n  const [currentImgIndex, setCurrentImgIndex] = useState(0);\n  const [clickedImage, setClickedImage] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = image => {\n    setClickedImage(image);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const previousImg = () => {\n    if (currentImgIndex > 0) {\n      setCurrentImgIndex(currentImgIndex - 10);\n    }\n  };\n  const nextImg = () => {\n    if (currentImgIndex < imageUrls.length - 1) {\n      setCurrentImgIndex(currentImgIndex + 10);\n    }\n  };\n  const [currentVidIndex, setCurrentVidIndex] = useState(0);\n  const previousVid = () => {\n    if (currentVidIndex > 0) {\n      setCurrentVidIndex(currentVidIndex - 1);\n      console.log(\"video should change to\");\n    }\n  };\n  const nextVid = () => {\n    if (currentVidIndex < videoUrls.length - 1) {\n      setCurrentVidIndex(currentVidIndex + 1);\n    }\n  };\n  const videoUrl = videoUrls[currentVidIndex];\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoGallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leftarrow\",\n        onClick: previousVid,\n        disabled: currentVidIndex === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoUrl,\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn rightarrow\",\n        onClick: nextVid,\n        disabled: currentVidIndex === videoUrls.length - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageGallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leftarrow\",\n        onClick: previousImg,\n        disabled: currentImgIndex === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), imageUrls.slice(currentImgIndex, currentImgIndex + 10).map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        onClick: () => openModal(image),\n        alt: 'Yugioh Decklist ${index +1}'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)), \";\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn rightarrow\",\n        onClick: nextImg,\n        disabled: currentImgIndex >= imageUrls.length - 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"modal\",\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      ContentLabel: \"Image Modal\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: clickedImage,\n        alt: \"Yugioh Decklist\",\n        onClick: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(ReplayImages, \"isLa/wdliw37C8aElrxAV7TIRJ0=\");\n_c = ReplayImages;\nexport default ReplayImages;\nvar _c;\n$RefreshReg$(_c, \"ReplayImages\");","map":{"version":3,"names":["Modal","useState","jsxDEV","_jsxDEV","ReplayImages","_s","videoUrls","imageUrls","currentImgIndex","setCurrentImgIndex","clickedImage","setClickedImage","isModalOpen","setIsModalOpen","openModal","image","closeModal","previousImg","nextImg","length","currentVidIndex","setCurrentVidIndex","previousVid","console","log","nextVid","videoUrl","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","type","slice","map","index","alt","isOpen","onRequestClose","ContentLabel","_c","$RefreshReg$"],"sources":["C:/Users/jason/React/my-react-app/Client/src/Pages/Projects/YGOReplays&Images/ReplayImages.js"],"sourcesContent":["import './ReplayImages.css';\r\nimport Modal from 'react-modal';\r\nimport { useState } from 'react';\r\n\r\n/*\r\nJust want this to be able to display my replays and screenshots in an appealing way for practice. \r\nSimple layout practice for different media.\r\n*/\r\n\r\nfunction ReplayImages(){\r\n\r\n    const videoUrls = [\r\n        '/Videos/ShaddollDespia_VS_Lyrilcus.mp4',\r\n        '/Videos/Altergeist_VS_Dragonmaid.mp4'\r\n    ]\r\n\r\n    const imageUrls = [\r\n        '/Images/Decklist_Altergeist.png',\r\n        '/Images/Decklist_Branded_Bystial.png',\r\n        '/Images/Decklist_Dogmatika.png',\r\n        '/Images/Decklist_Floowandereeze.png',\r\n        '/Images/Decklist_Ghostrick.png',\r\n        '/Images/Decklist_Labryth.png',\r\n        '/Images/Decklist_LiveTwin.png',\r\n        '/Images/Decklist_Mathmech.png',\r\n        '/Images/Decklist_Mikanko.png',\r\n        '/Images/Decklist_NaturiaRunick.png',\r\n        '/Images/Decklist_Prankids.png',\r\n        '/Images/Decklist_Prediction_Princess.png',\r\n        '/Images/Decklist_PUNKash.png',\r\n        '/Images/Decklist_PUNKBystial.png',\r\n        '/Images/Decklist_Rikka.png',\r\n        '/Images/Decklist_ShaddollPerformage.png',\r\n        '/Images/Decklist_Solfachord.png',\r\n        '/Images/Decklist_SprightLiveTwin.png',\r\n        '/Images/Decklist_SprightMelffy.png',\r\n        '/Images/Decklist_Sunavalon.png',\r\n        '/Images/Decklist_SushipMagikey.png',\r\n        '/Images/Decklist_Sylvan.png',\r\n        '/Images/Decklist_WeatherPainters.png',\r\n        '/Images/Festival_Synchro.png',\r\n        '/Images/Festival_FusionXyz.png'\r\n    ];\r\n\r\n    const [currentImgIndex, setCurrentImgIndex] = useState(0);\r\n    const [clickedImage, setClickedImage] = useState('');\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const openModal = (image) => {\r\n        setClickedImage(image)\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const previousImg = () => {\r\n        if (currentImgIndex > 0) {\r\n        setCurrentImgIndex(currentImgIndex - 10);\r\n        }\r\n    };\r\n    const nextImg = () => {\r\n        if (currentImgIndex < imageUrls.length - 1) {\r\n        setCurrentImgIndex(currentImgIndex + 10);\r\n        }\r\n    };\r\n\r\n    const [currentVidIndex, setCurrentVidIndex] = useState(0);\r\n    const previousVid = () => {\r\n        if (currentVidIndex > 0) {\r\n        setCurrentVidIndex(currentVidIndex - 1);\r\n        console.log(\"video should change to\" )\r\n        }\r\n    };\r\n    const nextVid = () => {\r\n        if (currentVidIndex < videoUrls.length - 1) {\r\n        setCurrentVidIndex(currentVidIndex + 1);\r\n        }\r\n    };\r\n\r\n    \r\n    const videoUrl = videoUrls[currentVidIndex];\r\n\r\n    return(\r\n        <body className=\"container\">\r\n            <div className='videoGallery'>\r\n                <button className='btn leftarrow' onClick={previousVid} disabled={currentVidIndex === 0}/>\r\n                <video src={videoUrl} controls>\r\n                    <source src={videoUrl} type='video/mp4'/>\r\n                </video>\r\n                <button className='btn rightarrow' onClick={nextVid} disabled={currentVidIndex === videoUrls.length - 1}/>\r\n            </div>\r\n\r\n            <div className=\"imageGallery\">\r\n                <button className='btn leftarrow' onClick={previousImg} disabled={currentImgIndex === 0}/>\r\n                {imageUrls.slice(currentImgIndex, currentImgIndex+10).map((image, index) => (\r\n                    <img\r\n                    key={index}\r\n                    src={image}\r\n                    onClick={() => openModal(image)}\r\n                    alt={'Yugioh Decklist ${index +1}'}\r\n                    />))\r\n                };\r\n                <button className='btn rightarrow' onClick={nextImg} disabled={currentImgIndex >= imageUrls.length - 10}/>\r\n            </div>\r\n            \r\n            <Modal className=\"modal\" isOpen={isModalOpen} onRequestClose={closeModal} ContentLabel=\"Image Modal\" >\r\n                <img src={clickedImage} alt=\"Yugioh Decklist\" onClick={closeModal}/>\r\n            </Modal>\r\n\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default ReplayImages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}